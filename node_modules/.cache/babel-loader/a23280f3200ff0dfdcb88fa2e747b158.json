{"ast":null,"code":"import _slicedToArray from\"/Users/mart/Documents/code/cinema-save-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ReactSession}from'react-client-session';import React,{useEffect,useState}from'react';import movieFunctions from\"../api/index.js\";import{EditBoardPopup}from'../components/EditBoardPopup.jsx';import{Navbar}from'../components/Navbar.jsx';import{PinReccomendations}from'../components/PinReccomendations.jsx';// style sheets\nimport'./profile.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ShowIndBoard(){var userid=ReactSession.get(\"userid\");var boardID=window.location.pathname.split('/board/')[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pins=_useState4[0],setPins=_useState4[1];var _useState5=useState(Boolean),_useState6=_slicedToArray(_useState5,2),showPopup=_useState6[0],setShowPopup=_useState6[1];var handleSave=function handleSave(props){fetch('https://cinema-save.herokuapp.com/authentication/profile/addpin/',{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(props),credentials:'include'}).then(function(response){return response.json();}).then(function(response){setPins(response.pins);});};var handleRemove=function handleRemove(props){fetch('https://cinema-save.herokuapp.com/authentication/profile/deletepin/',{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(props),credentials:'include'}).then(function(response){response=response.json();return response;}).then(function(data){setBoard(data.boards);setPins(data.pins);});};var handleEdit=function handleEdit(){setShowPopup(true);};useEffect(function(){movieFunctions.getProfileBoard(userid,boardID).then(function(response){return response.data;}).then(function(response){setBoard(response);setPins(response.pins);});},[]);var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),movie=_useState8[0],setMovies=_useState8[1];useEffect(function(){movieFunctions.getAll(userid).then(function(response){setMovies(response.data);});},[]);var boardPins=pins.slice(0).reverse().map(function(movie){return/*#__PURE__*/_jsxs(\"div\",{className:\"board-movies\",children:[/*#__PURE__*/_jsx(\"img\",{src:movie.poster,alt:\"\".concat(movie.title,\" poster\"),className:\"poster\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie-descrip\",children:[/*#__PURE__*/_jsx(\"h3\",{children:movie.title}),/*#__PURE__*/_jsxs(\"h5\",{children:[\"imdb: \",movie.imdbRating,\" \"]}),/*#__PURE__*/_jsxs(\"h5\",{children:[\"genre(s): \",movie.genre,\" \"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"save-btn\",onClick:function onClick(){return handleRemove({'movieID':movie._id,'userID':userid,'boardID':boardID});},children:\"remove\"})]});});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"showBoard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"menu\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleEdit,children:\"edit board\"}),/*#__PURE__*/_jsx(EditBoardPopup,{value:showPopup,data:{'userID':userid,'boardID':boardID}})]}),/*#__PURE__*/_jsxs(\"h1\",{children:[board.title,\" Board\"]}),/*#__PURE__*/_jsx(\"h3\",{children:board.description}),/*#__PURE__*/_jsx(Pins,{pins:pins,component:boardPins}),/*#__PURE__*/_jsx(\"h2\",{children:\"Here are some suggestions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"movies-contianer\",children:/*#__PURE__*/_jsx(PinReccomendations,{userid:userid})})]})]});}function Pins(props){var pins=props.pins;{if(pins.length===0){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"get started by adding pins to this board!\"})});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"boards-container\",children:props.component});}}}export default ShowIndBoard;","map":{"version":3,"sources":["/Users/mart/Documents/code/cinema-save-client/src/pages/ShowIndBoard.jsx"],"names":["ReactSession","React","useEffect","useState","movieFunctions","EditBoardPopup","Navbar","PinReccomendations","ShowIndBoard","userid","get","boardID","window","location","pathname","split","board","setBoard","pins","setPins","Boolean","showPopup","setShowPopup","handleSave","props","fetch","method","headers","body","JSON","stringify","credentials","then","response","json","handleRemove","data","boards","handleEdit","getProfileBoard","movie","setMovies","getAll","boardPins","slice","reverse","map","poster","title","imdbRating","genre","_id","description","Pins","length","component"],"mappings":"oKAAA,OAASA,YAAT,KAA6B,sBAA7B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,iBAA3B,CACA,OAASC,cAAT,KAA+B,kCAA/B,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,OAASC,kBAAT,KAAmC,sCAAnC,CAEA;AACA,MAAO,eAAP,C,wFAEA,QAASC,CAAAA,YAAT,EAAwB,CACpB,GAAMC,CAAAA,MAAM,CAAGT,YAAY,CAACU,GAAb,CAAiB,QAAjB,CAAf,CACA,GAAIC,CAAAA,OAAO,CAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,SAA/B,EAA0C,CAA1C,CAAd,CACA,cAA0BZ,QAAQ,CAAC,EAAD,CAAlC,wCAAOa,KAAP,eAAcC,QAAd,eACA,eAAwBd,QAAQ,CAAC,EAAD,CAAhC,yCAAOe,IAAP,eAAaC,OAAb,eACA,eAAkChB,QAAQ,CAACiB,OAAD,CAA1C,yCAAOC,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAE1BC,KAAK,CAAC,kEAAD,CAAqE,CACxEC,MAAM,CAAE,MADgE,CAExEC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF+D,CAGxEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAHkE,CAIxEO,WAAW,CAAE,SAJ2D,CAArE,CAAL,CAKGC,IALH,CAKQ,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAPD,EAOGF,IAPH,CAOQ,SAACC,QAAD,CAAc,CAClBd,OAAO,CAACc,QAAQ,CAACf,IAAV,CAAP,CACH,CATD,EAUH,CAZD,CAcA,GAAMiB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACX,KAAD,CAAW,CAE5BC,KAAK,CAAC,qEAAD,CAAwE,CAC3EC,MAAM,CAAE,MADmE,CAE3EC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFkE,CAG3EC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAHqE,CAI3EO,WAAW,CAAE,SAJ8D,CAAxE,CAAL,CAMCC,IAND,CAMM,SAACC,QAAD,CAAc,CAChBA,QAAQ,CAAGA,QAAQ,CAACC,IAAT,EAAX,CACA,MAAOD,CAAAA,QAAP,CACH,CATD,EASGD,IATH,CASQ,SAACI,IAAD,CAAU,CACdnB,QAAQ,CAACmB,IAAI,CAACC,MAAN,CAAR,CACAlB,OAAO,CAACiB,IAAI,CAAClB,IAAN,CAAP,CACH,CAZD,EAaH,CAfD,CAiBA,GAAMoB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBhB,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,CAIApB,SAAS,CAAC,UAAM,CACZE,cAAc,CACTmC,eADL,CACqB9B,MADrB,CAC6BE,OAD7B,EAEKqB,IAFL,CAEU,SAACC,QAAD,CAAc,CAChB,MAAOA,CAAAA,QAAQ,CAACG,IAAhB,CACH,CAJL,EAKKJ,IALL,CAKU,SAACC,QAAD,CAAc,CAChBhB,QAAQ,CAACgB,QAAD,CAAR,CACAd,OAAO,CAACc,QAAQ,CAACf,IAAV,CAAP,CACH,CARL,EASH,CAVQ,CAUN,EAVM,CAAT,CAaA,eAA2Bf,QAAQ,CAAC,EAAD,CAAnC,yCAAOqC,KAAP,eAAcC,SAAd,eACAvC,SAAS,CAAC,UAAM,CACZE,cAAc,CACTsC,MADL,CACYjC,MADZ,EAEKuB,IAFL,CAEU,SAACC,QAAD,CAAc,CAChBQ,SAAS,CAACR,QAAQ,CAACG,IAAV,CAAT,CACH,CAJL,EAKH,CANQ,CAMN,EANM,CAAT,CAQA,GAAMO,CAAAA,SAAS,CAAGzB,IAAI,CAAC0B,KAAL,CAAW,CAAX,EAAcC,OAAd,GAAwBC,GAAxB,CAA4B,SAAUN,KAAV,CAAiB,CAC3D,mBACD,aAAK,SAAS,CAAC,cAAf,wBACI,YAAK,GAAG,CAAEA,KAAK,CAACO,MAAhB,CAAwB,GAAG,WAAMP,KAAK,CAACQ,KAAZ,WAA3B,CAAuD,SAAS,CAAC,QAAjE,EADJ,cAEK,aAAK,SAAS,CAAC,eAAf,wBACI,oBAAKR,KAAK,CAACQ,KAAX,EADJ,cAEI,+BAAYR,KAAK,CAACS,UAAlB,OAFJ,cAGI,mCAAgBT,KAAK,CAACU,KAAtB,OAHJ,GAFL,cAOK,eAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAE,yBAAMf,CAAAA,YAAY,CAAC,CAAE,UAAWK,KAAK,CAACW,GAAnB,CAAwB,SAAU1C,MAAlC,CAA0C,UAAWE,OAArD,CAAD,CAAlB,EAAtC,oBAPL,GADC,CAWH,CAZiB,CAAlB,CAcF,mBACE,oCACI,KAAC,MAAD,IADJ,cAEM,aAAK,SAAS,CAAC,WAAf,wBACE,aAAK,SAAS,CAAC,MAAf,wBACI,eAAQ,OAAO,CAAE2B,UAAjB,wBADJ,cAEM,KAAC,cAAD,EAAgB,KAAK,CAAGjB,SAAxB,CAAoC,IAAI,CAAG,CAAE,SAAUZ,MAAZ,CAAoB,UAAWE,OAA/B,CAA3C,EAFN,GADF,cAME,sBAAKK,KAAK,CAACgC,KAAX,YANF,cAOE,oBAAKhC,KAAK,CAACoC,WAAX,EAPF,cASE,KAAC,IAAD,EAAM,IAAI,CAAElC,IAAZ,CAAkB,SAAS,CAAGyB,SAA9B,EATF,cAWE,iDAXF,cAYE,YAAK,SAAS,CAAC,kBAAf,uBACI,KAAC,kBAAD,EAAoB,MAAM,CAAIlC,MAA9B,EADJ,EAZF,GAFN,GADF,CAqBD,CAGD,QAAS4C,CAAAA,IAAT,CAAc7B,KAAd,CAAqB,CACjB,GAAMN,CAAAA,IAAI,CAAGM,KAAK,CAACN,IAAnB,CACA,CACI,GAAIA,IAAI,CAACoC,MAAL,GAAgB,CAApB,CAAuB,CACnB,mBACI,kCACI,gEADJ,EADJ,CAKH,CAND,IAMO,CACH,mBACI,YAAK,SAAS,CAAC,kBAAf,UACK9B,KAAK,CAAC+B,SADX,EADJ,CAKH,CACJ,CAEJ,CAED,cAAe/C,CAAAA,YAAf","sourcesContent":["import { ReactSession } from 'react-client-session';\nimport React, { useEffect, useState } from 'react';\nimport movieFunctions from \"../api/index.js\";\nimport { EditBoardPopup } from '../components/EditBoardPopup.jsx';\nimport { Navbar } from '../components/Navbar.jsx';\nimport { PinReccomendations } from '../components/PinReccomendations.jsx';\n\n// style sheets\nimport './profile.css';\n\nfunction ShowIndBoard() {\n    const userid = ReactSession.get(\"userid\");\n    let boardID = window.location.pathname.split('/board/')[1];\n    const [board, setBoard] = useState([]);\n    const [pins, setPins] = useState([]);\n    const [showPopup, setShowPopup] = useState(Boolean);\n\n    const handleSave = (props) => {\n\n        fetch('https://cinema-save.herokuapp.com/authentication/profile/addpin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props),\n          credentials: 'include'\n        }).then((response) => {\n            return response.json()\n        }).then((response) => {\n            setPins(response.pins)\n        })\n    }\n\n    const handleRemove = (props) => {\n\n        fetch('https://cinema-save.herokuapp.com/authentication/profile/deletepin/', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(props),\n          credentials: 'include'\n        })\n        .then((response) => {\n            response = response.json()\n            return response\n        }).then((data) => {\n            setBoard(data.boards)\n            setPins(data.pins)\n        })\n    }\n\n    const handleEdit = () => { \n        setShowPopup(true)\n    }\n\n    useEffect(() => {\n        movieFunctions\n            .getProfileBoard(userid, boardID)\n            .then((response) => {\n                return response.data\n            })\n            .then((response) => {\n                setBoard(response)\n                setPins(response.pins)\n            })\n    }, []);\n\n\n    const [movie, setMovies] = useState([]);\n    useEffect(() => {\n        movieFunctions\n            .getAll(userid)\n            .then((response) => {\n                setMovies(response.data)\n            })\n    }, []);\n\n    const boardPins = pins.slice(0).reverse().map(function (movie) {\n        return (\n       <div className='board-movies'>\n           <img src={movie.poster} alt={ `${movie.title} poster`} className='poster'/>\n            <div className='movie-descrip'>\n                <h3>{movie.title}</h3>\n                <h5>imdb: { movie.imdbRating } </h5>\n                <h5>genre(s): { movie.genre } </h5>\n            </div>\n            <button className='save-btn' onClick={() => handleRemove({ 'movieID': movie._id, 'userID': userid, 'boardID': boardID })}>remove</button>\n       </div>\n        )\n    })\n\n  return (\n    <div>\n        <Navbar />\n          <div className=\"showBoard\">\n            <div className='menu'>\n                <button onClick={handleEdit}>edit board</button>\n                  <EditBoardPopup value={ showPopup } data={ { 'userID': userid, 'boardID': boardID } }/>  \n            </div>\n            \n            <h1>{board.title} Board</h1>\n            <h3>{board.description}</h3>\n              \n            <Pins pins={pins} component={ boardPins }/>\n\n            <h2>Here are some suggestions</h2>\n            <div className='movies-contianer'>\n                <PinReccomendations userid= { userid }/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\n\nfunction Pins(props) {\n    const pins = props.pins\n    {\n        if (pins.length === 0) {\n            return (\n                <div>\n                    <p>get started by adding pins to this board!</p>\n                </div>\n            )\n        } else {\n            return (\n                <div className='boards-container'>\n                    {props.component}\n                </div>\n            )\n        }\n    }\n\n}\n\nexport default ShowIndBoard;"]},"metadata":{},"sourceType":"module"}